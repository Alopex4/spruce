界面设计
    [^fig1]
    界面设计图如上所示。该设计图为主界面设计图，设计图中所有的功能模块均安放在同一界面下，下面具体介绍各部分控件的功能。
    应用的绝大部分功能是通过菜单按钮实现的，依照一般的使用习惯，第一个菜单为文件菜单(File)，其负责有关文件读写、数据导出以及应用关闭的功能。第二个菜单功能菜单(Capture)，负责控制抓包的功能，如抓包的开始，抓包的停止，重新启动抓包。第三个菜单为统计菜单(statistics)，其负责有关网络流量数据图表生成，协议长度图表的统计生成，数据包相关图表的统计生成。最后一个是帮助菜单(Help)，该菜单负责开发者的信息，使用帮组等信息的展示。
    应用的主界面分为两个部分组成，一块是数据呈现区域，另外一块是信息配置区域。
    数据呈现区域是应用的核心区域，占应用界面的三分之二。该区域可以再细分为三个部分，第一部分为数据包基本信息展示，这里进行了粗略的数据包解包，因此可以看到其显示信息为数据包编号，目的地址，源地址，数据包长度，基本信息展示等相关的条目。接着第二个部分是详细数据包的分析，该部分以TCP/IP族的结构划分为了三大块，数据包信息的头部字段详细解析就在这里完成。第三部分是二进制解释区域，这部分将数据包的二进制表示展示出来，使用ASCII编码格式对其进行解析(decode)。
    信息配置区域，由五部分组成，主要处理数据获取，辅助工具等内容。对于数据获取，这里第一个模块获得的是本地与网管的网络信息，第二个模块提供了范围IP地址扫描与掩码扫描两种对局域网主机进行发现的方式。第三个模块是对活动节点的展示，为抓包提供节点的选择。第四个模块是过滤器模块，该模提供了过滤协议的选择，第五个模块是IP地址查询得外界模块，提供了IP地址归属信息的查询，查询结果在文本框显示。
    应用的状态栏上，有下载(download)与上传(upload)信息的动态更新。
界面实现
    系统实现界面由Qt Designer工具辅助完成，完成结果较设计草稿有明显的优化，以下为系统的真实实现效果。
    [^fig2]
    上图为系统实际启动图，以下将对实际实现的用户界面和设计草稿之间进行对比，指明提升的地方再哪里。
    首先从界面全局进行分析，明显的发现草稿上拥挤在一起的控件消失了，更换成了内嵌的Tabs格式布局，提升了空间的利用率。在整体设计上，实现的界面增添了不少的图标点缀，为应用带来了不少的生气。
    对于菜单界面，新增加了view菜单(视图)这个条目，该条目是两个关于右侧面板的复选框，其目的是提供给用户对面板进行显示与隐藏。新增加了选项(Option)这个条目，这个条目下面是过滤器选项，点击该选项将会弹出一个过滤器对话框。该对话框提供两种过滤器使用的方法，一种是勾选下面的复选框常用协议进行数据包过滤，第二种是自定义过滤字段，可参见图[^fig3]。帮助菜单更名为关于菜单(about)，其中除了设计草图的功能外，额外增加了rank功能，这是一个用于查看系统环境是否符合应用运行环境的，可参见图[^fig4][^fig5]。为了配合这个rank功能，选项菜单新增了一条更新控件使用权的(refresh rank)。
    对于数据呈现区域，数据包基本信息呈现区域被条目中breief被删除，新增了protocol与Stack条目。详细数据包分析区没有变化。二进制解析区域从原来的二进制与解析结合在一起，改为现在的分离式结构。
    信息配置区域，由于使用得Dock排版，从设计草图中的固定位置，变为如今集拉伸、隐藏、浮动和折叠功能于一身的窗体。为使用的便捷性提供了无可挑剔的优势。由于需要进行ARP活动节点这类较为费事的操作，特意添加了一条进度条，提供给用户更好的体验。
    应用的状态栏上增加了不少的图标点缀，左边增加了一个过滤器提示信息，右边新增了数据包收发数量的统计功能。

模块设计表
    Template
        子系统名称：
        模块名称：
        输入：
        处理：
        算法描述：
        输出：
模块实现
