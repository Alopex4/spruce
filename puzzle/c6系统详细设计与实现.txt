界面设计
    [^fig1]
    界面设计图如上所示。该设计图为主界面设计图，设计图中所有的功能模块均安放在同一界面下，下面具体介绍各部分控件的功能。
    应用的绝大部分功能是通过菜单按钮实现的，依照一般的使用习惯，第一个菜单为文件菜单(File)，其负责有关文件读写、数据导出以及应用关闭的功能。第二个菜单功能菜单(Capture)，负责控制抓包的功能，如抓包的开始，抓包的停止，重新启动抓包。第三个菜单为统计菜单(statistics)，其负责有关网络流量数据图表生成，协议长度图表的统计生成，数据包相关图表的统计生成。最后一个是帮助菜单(Help)，该菜单负责开发者的信息，使用帮组等信息的展示。
    应用的主界面分为两个部分组成，一块是数据呈现区域，另外一块是信息配置区域。
    数据呈现区域是应用的核心区域，占应用界面的三分之二。该区域可以再细分为三个部分，第一部分为数据包基本信息展示，这里进行了粗略的数据包解包，因此可以看到其显示信息为数据包编号，目的地址，源地址，数据包长度，基本信息展示等相关的条目。接着第二个部分是详细数据包的分析，该部分以TCP/IP族的结构划分为了三大块，数据包信息的头部字段详细解析就在这里完成。第三部分是二进制解释区域，这部分将数据包的二进制表示展示出来，使用ASCII编码格式对其进行解析(decode)。
    信息配置区域，由五部分组成，主要处理数据获取，辅助工具等内容。对于数据获取，这里第一个模块获得的是本地与网管的网络信息，第二个模块提供了范围IP地址扫描与掩码扫描两种对局域网主机进行发现的方式。第三个模块是对活动节点的展示，为抓包提供节点的选择。第四个模块是过滤器模块，该模提供了过滤协议的选择，第五个模块是IP地址查询得外界模块，提供了IP地址归属信息的查询，查询结果在文本框显示。
    应用的状态栏上，有下载(download)与上传(upload)信息的动态更新。
界面实现
    系统实现界面由Qt Designer工具辅助完成，完成结果较设计草稿有明显的优化，以下为系统的真实实现效果。
    [^fig2]
    上图为系统实际启动图，以下将对实际实现的用户界面和设计草稿之间进行对比，指明提升的地方再哪里。
    首先从界面全局进行分析，明显的发现草稿上拥挤在一起的控件消失了，更换成了内嵌的Tabs格式布局，提升了空间的利用率。在整体设计上，实现的界面增添了不少的图标点缀，为应用带来了不少的生气。
    对于菜单界面，新增加了view菜单(视图)这个条目，该条目是两个关于右侧面板的复选框，其目的是提供给用户对面板进行显示与隐藏。新增加了选项(Option)这个条目，这个条目下面是过滤器选项，点击该选项将会弹出一个过滤器对话框。该对话框提供两种过滤器使用的方法，一种是勾选下面的复选框常用协议进行数据包过滤，第二种是自定义过滤字段，可参见图[^fig3]。帮助菜单更名为关于菜单(about)，其中除了设计草图的功能外，额外增加了rank功能，这是一个用于查看系统环境是否符合应用运行环境的，可参见图[^fig4][^fig5]。为了配合这个rank功能，选项菜单新增了一条更新控件使用权的(refresh rank)。
    对于数据呈现区域，数据包基本信息呈现区域被条目中breief被删除，新增了protocol与Stack条目。详细数据包分析区没有变化。二进制解析区域从原来的二进制与解析结合在一起，改为现在的分离式结构。
    信息配置区域，由于使用得Dock排版，从设计草图中的固定位置，变为如今集拉伸、隐藏、浮动和折叠功能于一身的窗体。为使用的便捷性提供了无可挑剔的优势。由于需要进行ARP活动节点这类较为费事的操作，特意添加了一条进度条，提供给用户更好的体验。
    应用的状态栏上增加了不少的图标点缀，左边增加了一个过滤器提示信息，右边新增了数据包收发数量的统计功能。

模块设计表

        子系统名称：网络信息子系统
        模块名称：本地主机网络信息模块
        输入：-
        处理：通过系统文件读取获得网络信息当，填写至文本框中
        算法描述：-
        输出：
              网络链接正常时：本机的IP地址、MAC地址、子网掩码和制造商信息
              网络链接失败时：空

        子系统名称：网络信息子系统
        模块名称：网关设备网络信息模块
        输入：-
        处理：通过对系统文件的读取获得网关信息，填写至文本框中
        算法描述：-
        输出：
              网络链接正常时：网关IP地址、MAC地址和制造商信息
              网络链接失败时：空

        子系统名称：局域网扫描子系统
        模块名称：扫描方式选择模块 
        输入：网络信息子系统的本机信息 或 录入IP地址
        处理：提取IP与掩码进行网络地址计算
        算法描述：
                1.对于获得的网络信息
                    1.1 截取IP地址和子网掩码
                    1.2 通过对IP与子网掩码进行AND运算得出网络地址
                    1.3 将网络地址填写到文本框中
                2. 对于人工输入的信息
                    2.1 要求输入的格式必须遵守特定的格式
                    2.2 不符合的数据不得录入
        输出：显示符合规范得扫描IP格式

        子系统名称：局域网扫描子系统
        模块名称：ARP数据包发送监听模块
        输入：网络信息子系统的本机信息与网关信息，扫描方式模块的扫描范围
        处理：提取相关MAC地址、IP地址和扫描IP地址范围，进行数据包构造发送与响应记录
        算法描述：
                1. 通过获得的网络信息构建ARP数据包
                2. 对扫描范围内的主机发送ARP数据包
                3. 对响应的ARP数据包进行记录
                4. 存储活跃节点的IP、MAC等信息
        输出：存储的节点信息

        子系统名称：局域网扫描子系统
        模块名称：扫描信息显示模块
        输入：ARP数据包发送监听模块存储信息
        处理：对ARP扫描的信息进行整理与显示
        算法描述：
                1. 获得活跃节点的MAC地址
                2. 通过查询OUI表格获得制造商信息
                3. 通过地址比较，判断该地址的类型为本机、网关还是其他
        输出：在列表中显示活跃节点的IP与制造商信息

        子系统名称：数据包过滤器子系统
        模块名称：过滤器实现模块
        输入：过滤字符串
        处理：将过滤字符串进行处理，生成可用于socket中setsocketopt使用的内容
        算法描述：
                1.获得过滤器设置字段
                2.将过滤器字段交给tcpdump处理生成相应的格式编码
                3.对生成编码进行处理
                4.将处理结果与socket的setsocketopt进行绑定
        输出：setsocketopt可识别的内容

        子系统名称：数据包过滤器子系统
        模块名称：过滤器规则设置模块
        输入：-
        处理：将过滤器界面复选框内容映射为过滤字符串
        算法描述：-
        输出：显示的字符串

        子系统名称：数据包过滤器子系统
        模块名称：过滤器提示模块
        输入：过滤器规则设置模块获得的内容
        处理：对过滤器字符串进行显示
        算法描述：-
        输出：将过滤器字符串显示在状态栏上

        子系统名称：数据包捕获子系统
        模块名称：数据包捕捉模块
        输入：过滤器字符串
        处理：开启数据包捕获，设置过滤器，对捕获信息数据包进行保存
        算法描述：
                1.启用rawsocket
                2.对抓包主机进行判断
                    2.1 对于节点为网关或过滤器设置错误的提示错误
                    2.2 本地主机或其他主机可进行抓包
                        2.2.1 设置过滤器
                        2.2.2 启用IP Forward（如果主机非本地）
                        2.2.3 存储数据包
        输出：保存的数据包

        子系统名称：数据包捕获子系统
        模块名称：数据包初解包模块
        输入：捕获的数据包
        处理：对捕获的数据包进行特定字段的解析，将字段显示到表格当中
        算法描述：-
        输出：保存的数据包长度，地址信息，最高层协议，使用的协议栈，显示于表格中

        子系统名称：数据包捕获子系统
        模块名称：数据包文件模块
        输入：数据包存储信息
        处理：写入pcap头部信息，依照其格式进行数据包的写入
        算法描述：-
        输出：数据包pcap文件

        子系统名称：数据包信息展示子系统
        模块名称：数据包分层解包模块
        输入：读入存储的数据包
        处理：对数据包进行分层解析
        算法描述：-
        输出：在Tabs中显示各层的解析内容

        子系统名称：数据包信息展示子系统
        模块名称：数据包原始数据解码模块
        输入：读入存储的数据包
        处理：对数据包进行编码解析
        算法描述：-
        输出：在Tabs中显示原始二进制和解码内容

        子系统名称：统计绘图子系统
        模块名称：网络流量图模块
        输入：网络流量信息
        处理：以网络流量为x轴，以网络流量为y轴，进行绘图
        算法描述：-
        输出：网络流量的时间关系图

        子系统名称：统计绘图子系统
        模块名称：协议统计模块
        输入：存储的网络数据包
        处理：对网络数据包进行读取
        算法描述：-
        输出：网络数据包统计关系图

        子系统名称：统计绘图子系统
        模块名称：数据包长度统计模块
        输入：存储的网络数据包
        处理：获取各数据包到长度
        算法描述：-
        输出：网络数据包长度统计图

        子系统名称：数据导出子系统
        模块名称：本地信息导出
        输入：网络信息
        处理：对网络信息进行格式化
        算法描述：-
        输出：输出csv、Json和纯文本格式

        子系统名称：数据导出子系统
        模块名称：局域网信息导出
        输入：局域网信息
        处理：对局域网记录信息格式化
        算法描述：-
        输出：输出csv、Json和纯文本格式

        子系统名称：数据导出子系统
        模块名称：数据包摘要信息导出
        输入：存储的数据包信息
        处理：对存储得数据包基本解包信息整理格式化
        算法描述：-
        输出：输出csv、Json和纯文本格式

        子系统名称：协助支援子系统
        模块名称：协议查找模块
        输入：规定下的协议格式
        处理：对输入的协议信息进行处理，搜索出符合的数据包
        算法描述：-
        输出：在列表中加载出符合规则的数据包

        子系统名称：协助支援子系统
        模块名称：IP地址所属查询模块
        输入：IP地址
        处理：通过网络接口API获取IP相关信息
        算法描述：-
        输出：数据IP所属信息Json格式

        子系统名称：协助支援子系统
        模块名称：算机术语查询模块
        输入：计算机术语（英文）
        处理：通过网络接口API获取该术语的信息
        算法描述：-
        输出：输出该术语的相关解析

        子系统名称：协助支援子系统
        模块名称：网络流量记录模块
        输入：-
        处理：以间隔1秒的密度对网络流量的上传下载速度已经数据包的收发进行获取
        算法描述：-
        输出：存储网路流量的速度值和数据包收发情况

模块实现
        网络信息子系统
            [xfig1]
            该控件包含了本地计算机信息以及网关信息，通过对刷新按钮(refresh)的单击可以刷新当前网络信息。
        局域网扫描子系统
            [xfig2]
            局域网的扫描方式有两种，一种是范围扫描，使用“-”来表示范围。另外一种是子网掩码的扫描，使用“/”来表示后面的子网掩码。以上两个信息均是由网络信息自动计算而来，如有需要也能通过手动进行修改。
            [xfig3]
            [xfig4]
            [xfig5]
            点击扫描按键(Scan)后，扫描控件将会被激活，在扫描控件中将会显示扫描所选用的方式，其进度条将以走马灯的形式告诉用户，正在进行扫描操作。扫描完成后，我们将会在列表空间中看到相应的活跃节点，三种不同的图标表示节点不同的类型，其中红色的坐标图标表示这为当前用户的主机节点，方向盘这个图标表示的是网关节点，蓝色箭头图标表示的是其他存活主机节点，图标后续依次是硬件厂家信息和IP地址。更方便的方式是双击需要查看的主机，这将显示出相关的节点详细信息。

        数据包过滤器子系统
            [xfig6]
            [xfig7]
            这是过滤器操作界面，如需启动过滤器需要先对过滤器进行其用，默认情况下过滤器是关闭的(disable)。启动过滤器后，过滤器字段有两个选择，第一个通过复选框，进行常用协议的过滤，另外一种是自己手工设置过滤字段。第一方式适合初学者，第二种方式适合进阶人员的使用。无论是那种方式对过滤器进行设置，过滤器字段只要被确定，将会在状态栏中进行显示，如图[xfig4]

        数据包捕获子系统
            [xfig8]
            数据包被捕获后，得到的数据包信息将存储到内存中，对基本信息解码后，将会呈现到表格界面当中。为了方便用户使用，对于不同的数据包进行了必要的颜色标识，以作区分。

        数据包信息展示子系统
            [xfig9]
            [xfig10]
            对于数据包的解析，使用的是TCP/IP族的结构，该结构可以很好地对数据包的的层次进行展示。对于二进制的解码，使用的是两个界面，独立查看。

        统计绘图子系统
            [xfig11]
            [xfig12]
            [xfig13]
            统计数据图有9张，这里不过多展示，只列举了每一个大类别下的一张图。
        
        数据导出子系统
            [xfig14]
            [xfig15]
            [xfig15]
            对于数据的导出，每个数据类型有三种不同的导出格式csv、Json和纯文本格式，这里为了方便统计三种方式均使用了csv格式进行了展示。

        协助支援子系统
            [xfig17]
            [xfig18]
            对于IP地址信息归属的查询，这里提展示的效果。在没有进行IP地址查询的时候，使用了PlaceHolder对将要展示的信息给出了一个demo，使用户在第一次使用时就对获得的信息有一个大致的了解。

            [xfig19]
            [xfig20]
            对于计算机专业词汇的查询，也是如此，使用上操作简单，上手门槛极低。

            [xfig21]
            [xfig22]
            数据包显示后，还有一个对于数据包查询的功能，通过数据包的查找可以在表格中筛选出符合条件的数据包。值得一提的是，数据包的查找有两个规则可以应用，一个是"."的嵌套协议查找相当与AND操作，一个是","的多个协议查找相当与OR操作。

            [xfig23]
            状态栏的网络相关信息，仅仅在抓包的时候才会启动。这些信息动态更新，通过图标的可读性来替代文字是一个很不错的选择。

小结
     本章讲述了系统的详细设计与实现。详细设计中，对系统用户接口设计草图进行了分析并在界面设计过程中不断进行完善和改进，对各个模块的输入、输出、处理等信息的表格化显示，阐述清楚每一个模块处理的工作以及其使用的算法。在模块实现中，分解了软件中每个模块，进行独立的讲解，与子系统设计进行呼应。
