计算机网络知识
    1. 分层与数据包结构
          1.1 网络层次划分及功能
            网络协议(protocols)的开发通常是依照不同的层次进行的，不同的层次将负责通信中不同的部分。对于一个协议族/协议栈而言(protocol suite)，例如TCP/IP协议族，它是由多层次不同的协议协同组合而成的。一般而言，TCP/IP协议被划分为4个层次，如下图[^fig1]所示。
            不同层次决定了不同的功能。
            链路路层(Link Layer)，盖层有时候也会被称为(data-link)数据链路层或网络接口层(network interface)。盖层处理包含了操作系统中的设备驱动以及计算机物理设备的网卡(network interface card)的事务。具体体现为在传输前将比特编码为数据包(packet)，然后将数据包解码回目的地的比特，比特作为计算机通信中最基本的信息单元，数据包是所有现代计算机网络信息传输的基本单位。该层的职能还包括逻辑链路控制、媒体访问的控制、硬件寻址、差错检测和处理以及物理曾定义的物理标准的个工作。其通过必要的差错控制与流量控制来传输数据包，从而达到提供可靠数据传输的目的。
            网络层(Network Layer)，盖曾也被称为网际层(internet layer)。盖层负责路由功能，解决物理地址与逻辑地址的转换问题，在网络路径中依照给定的算法选择一条合适的路径进行数据包的传输。
            传输层(Transport Layer)，盖层负责维持网络上端到端的通信，传输层响应来自上方应用层的服务请求，并向下层的网络曾发出服务请求，以此在两台主机之间建立对话（虚连接）。该层主又两个协议组成，一个是面向连接的TCP协议，另外一个是无连接得UDP协议。区别在于TCP发送的每个数据包都要求接收方提供确认反馈，而UDP则不需要任何确认反馈信息。
            应用层(Application Layer)，盖层提供给人或软件使用网络资源，它提供了网络用户接口和支撑服务例如收发电子邮件的POP3与SMTP，远程主机登录的Telnet、SSH、Rlogin，文件下载的FTP，网页浏览的HTTP等。
          1.2 数据包封装与解封
            数据包从一台主机发送到另一台主机这个过程中，对于发送方而言，需要对数据包进行封装(encapsulation)，而对于接收方而言需要对数据包解封(demultiplexing)。在这个过程中，数据处于不同的层次有不同的名称作为区分，具体如下图[^fig2]所示。
            在数据包发送过程中，数据由应用层中相关应用产生，应用层将数据递交给传输层，传输层依据相关的指示使用TCP或UDP对数据进行封装，封装完成后传输给网络层，网络层则继续进行IP头部的封装，封装完成后，将数据包传递给数据链路层，数据链路层则进行以太网头和尾部校验的封装，之后将数据包通过传输介质发送出去。
            在数据包接收过程中链路层将接受到整个数据包被称为帧(Frame)，当数据链路层玻璃了以太网头部和尾部后数据包被送到网络层，此时我们将得到包(Packet)，当网络层将IP头部剥离送达传输层后，我们将得到以UDP或TCP为头部得内容称为报文(datagram)，当传输层将其头部剥离传输给应用层后，我们将得到正真的数据(data)。
            封装与解封是一组互逆的过程，可形象地将其理解为邮政包裹的包装和派送这两个动作。
          1.3 主机间通信过程
            主机通信过程以FTP通信作为实例作为讲解，过程图[^fig3]如下所视。
            假设User1要与User2的FTP相关进程进行通信。User1的FTP进程会先把需要发送的数据交给传输层，由于FTP传输对传输有完整性的要求，因此FTP应用进程选择传输任务交给面先链接的TCP协议。传输层接收到数据后，为数据包封装TCP头，原本“裸露”的数据变成了报文，报文继续发送到下层网络层，网络层接过报文，为其封装IP头部，将报文变成了包，网络层继续将包递交到下一层数据链路层，数据链路层为包打上以太网头部和尾部，将包变成了以太网帧，紧接着以网卡以比特流的形式将太网帧送出网卡到达传输介质。
            当这一串比特流离开User1的计算机后，通过传输介质将会到达一太至多台的路由器(Router)，仅以图例讲解，路由器是一台拥有三个网络层次的设备。比特流在路由器的数据链路层将会被会解封以太网头部和以太网尾部，接着进入路由器的网络层将会被解封其IP头部信息，依据相应路由算法计算出下一条的地址，将计算出新的地址重新封装新的网络层信息，封装新的以太网信息，通过路由器网卡的出口，再次以比特流的形式传输到传输介质上。
            经过一次或多次路由的地址切换后，数据包将会抵达User2的主机。此时User2主机的物理层接受该串比特流，比特流通过数据链路层解封以太网头部和以太网尾部，将包移交给网络层，网络层解封IP头部将报文移交给传输层，传输层解封TCP头部，将数据移交给上层的FTP应用进程。至此，User1的数据包顺利到达User2主机上，完成一个数据包的收发过程。
            初开通信的细节而言，网络中的通信就是依照上述的流程进行的。网络通信的流程如此复杂却能有条不紊的进行下去，其关键因素在于使用了层次划分的理念。分层所带来的好处是明显的，如各个层次是独立的、灵活性好、结构上可以分割开、易于实现和维护和能促进标准化工。[^1]
    2. 地址与端口
          2.1 MAC地址
            MAC地址(Media Access Control address)直译名称为媒体接入控制地址。该地址是分配给网络接口控制器(Network Interface Card)的唯一标识。对于同一网段的通信而言，它是被用于以太网中进行局域网通信寻址，MAC地址在TCP/IP族中位于数据链路层。
            MAC地址的格式。MAC地址由48位二进制（6个字节）组成，以16位作为一组（2个字节）用16进制对8位二进制进行编码，使用冒号（:）进行分割。由于MAC地址是NIC的唯一标识符，因此地址的分配和使用需要监管，目前该工作由IEEE的注册管理机构RA(Registration Authority)负责此事。该机构负责分配MAC地址字段的前24位（3个字节），因此对于MAC地址而言前24位被称为组织唯一标识码OUI(Organizationally Unique Identifier)，也被注册厂商设定为自己得公司标识(vendor id)。获得OUI分配号码的厂商，可以自由使用MAC字段的后24位（3个字节），不进行地址保留的情况下可分配的MAC地址数量为2^24 约为 1.84 * 10^19个不同的地址，利用该方法得到的48位地址称为EUI-48 (Extended Unique Identifier)。需要指出的是对于不应该依靠24位OUI标识码来标记一家公司，因为有可能是几家公司一起购买同一OUI标识码，也有可能是一家公司购买了多个OUI标识码。
            对于MAC地址的规范除了上面的OUI码划分外，IEEE还作出了以下规定。对于MAC地址的第一个字节，最低位为组播(Multicast)和单播(Unicast)的区分位，其为1时表示组播可表示可进行多播。当其为0时，表示单播地址。对MAC地址第一字节的倒数第二为区全球管理(Global)和本地管理(Locally)，其为0时表示为全球地址代表这是向IEEE申请购买的OUI，当其为1时表示为本地管理，这时用户可以任意分配网络上的地址。
            具体图示如下所示[^fig4]。
          2.2 IP地址
            目前，IP地址(Internet Protocol address)可分为两类，IPv4地址与IPv6地址，IP地址位于TCP/IP族中网络层，本小结只介绍IPv4相关内容。
            IPv4依然是我们如今最常用的地址。IPv4地址大小为32位，其理论可分配的最大地址数为2^32等于4294967296。而在这个数字上，一些地址被保留用作其他的目的，例如专用网络(Private Network)用去了约1800万个地址，多播寻址用去了约2.7亿个地址。IPv4地址采用点分十进制(dot-decimal notation)的方式表示，由四个十进制数组成，每个十进制数的范围从0到255，用点分隔，例如122.162.254.7，每部分均表示一组8位二进制。详细可参见下图[^fig5]。
            在网络协议开发的早期，网络号是使用最高位的前八位作为划分的，也就是最多可分配网络数量为2^8为256个。这种分配额方式很快就被证明是不足够的，因此在1981年，引入了IP分类网络地址(classful network)架构修改了寻址规范。分类网络地址将IP地址划分为，A类、B类、C类、D类和E类共五种，其中A类、B类、C类单播地址，D类为多播地址，E类保留为以后使用。这里着重关注A、B、C三类地址。单播地址的划分均由两个字段分组成，一个字段是网络号(net-id)，另一个字段是主机号(host-id)，主机号与网络号两者拼接形成IP地址，因此主机号和网络号以及IP地址长度的关系如下：网络号长度 + 主机号长度 = IP地址长度(32位)。网络号的长度据定了划分网络个数的多少，而主机号的长度决定了一个网络中最多可容纳的主机个数。对于A类地址而言，网络号的长度为8位，可分配的网络数为256个，每个网络可分配的主机数理论值为为16777216台；B类网络号长度为16位，可分配网络数为65536个，每个网络可分配的主机数理论值为65536台；C类地址网络号长度为24位，可分配网络数为16777216个，每个网络可分配的主机数量理论值为256台。
            随着网络的发展，人们发现A类B类网路的划分存在着利用率极其低下的问题，一个A类网络中原本可以分配16777216个设备使用，但在实际生产环境下，这根本不现实。因此为了提交分类网络的使用，人们提出了新的解决方案划分子网(Subnetwork)，子网的划分是从有类网络中过来的，使得原来由两个字段组成的IP地址，变为三个字段组成，即保留网络号，主机号如今拆分成由子网号和主机号两部分构成。其关系如下：网络号长度 + 子网号长度 + 主机号长度 = IP地址长度(32位)。有了子网号码就必须拥有标识子网号的标记，因此就产生了子网掩码(subnet mask)，子网掩码的设计与IP地址相同，由32位二进制组成，高位网络位和子网位被全部填充为1，保留主机为0。IP地址只要与子网掩码进行AND操作，即可得出子网的网络地址，这对于网络设备的寻址是十分重要的。
            在1987年，一份RFC指明在一个划分子网的网络中运行同时使用多个不同的子网掩码，这被称为变长子网掩码(Variable Length Subnet Mask)，该技术可更进一步提高IP地址的利用率。具体体现我们可以比较以下两幅拓扑图[^fig6][^fig7]。
            在没有使用VLSM的图中，可以发现最大的单个子网需要至少容纳29台主机。因此主机号需要占用5位，因此子网掩码长度为27位，这样做才能达到组网的要求。可是不难发现，这里除了与RouterD相连的子网外，其余的子网都存在着或多或少未分配的IP地址，而这些地址由于都是同属在一个子网上，及是该子网不进行分配，其他网络也不能进行使用，这将造成十分严重的浪费。尤其是在路由器之间相连的接口上，由于这些接口使用了27位子网掩码，本有30个IP地址可进行分配，而如今只分配了两个，造成了28个IP地址白白流失。对没有使用VLSM拓扑图统计可得出将有118个IP地址在这次分配中被浪费，而分配使用的IP数为92个。
            在使用了VLSM的图中，对比可以看出，其区别在于子网掩码的位数变的可以自由调整，这也是VLSM这个名字的由来。通过自由调整子网掩码的位数，我们可以实现按需分配，我们这次分配92个IP地址，仅浪费了22个IP地址，利用率有了明显的提高。
            由于IP地址使用越发激烈，在VLSM的基础上又进步研究出了无类编址方法，被命名为无分类域间路由选择CIDR(Classless Inter-Domain Routing)，这是一种用于用户分配IP地址以及在互联网上有效路由并对IP数据包的对IP地址进行归类的方法。CIDR消除了传统A、B、C三类地址及划分子网的概念，它把网络前缀都相同的连续IP组织成一个“CIDR”块，通过CIDR块中任意一个地址，我们都可以知道这个地址块的起始地址。CIDR技术用新的手段定义了IP地址，并且在路有表中也能运用上CIDR进行地址块的查询，这种地址聚合被称为路由聚合(route aggregation)。
          2.3 端口号
            端口号(Port)，具体名称为协议端口号(protocol port number)，其存在于TCP/IP族的传输层。
            传输层中使用到一个16位端口号用于标识一个端口，该端口号只有本地意义，它仅用于标志本计算机的传输曾与各个进程间的接口。在互联网上不同的计算机中，相同的端口号之间没有任何关联。16位的端口号意味着可以使用的端口数有65536个，最对于一台计算机而言是十分充足的。两台计算机要进行通信，除了需要知道双方的IP地址外确认主机身份以外，对于一个应用而言还需要知道双方的端口号，才能确认是那两个进程之间进行通信。
            为了在使用端口的时候，大家避免不必要的麻烦，标准化组织IANA对于端口号的使用进行了规定。该规定以端口号的数值作为区分标准，他们将0-1023定义为熟知端口(well-known port number)，这些端口指派给最熟悉的应用程序，让所有的用户都知道，例如FTP对应21号端口，FTP-Data对应20号端口，SSH对应23号端口，HTTP对应的是80号端口。另外一类被称为注册端口(Registered ports)，其范围为1024-40151，该范围的端口是没有熟知的端口号在使用的，但是使用这类端口必须向IANA申请办理规定的手续，意防止重复。剩下的从49152-65535被定义为临时端口(Ephemeral ports)，这些端口可留给客户进程选择暂时使用。通信开始时，客户端进程使用这些端口与服务端进行数据收发，通信结束后客户端释放该端口，循环给本机其他客户进程再次使用。

开发涉及知识
    1. 嗅探技术
    2. ARP毒害技术

开发工具介绍
    1. 开发选用系统
    2. Python3 语言
    3. 图像用户接口（GUI）
    4. 统计图生成工具
    5. 数据包过滤器接口

小结


[1]谢希仁.计算机网络.(7).电子工业出版社.2017：29-30
