计算机网络知识
    1. 分层与数据包结构
          1.1 网络层次划分及功能
            网络协议(protocols)的开发通常是依照不同的层次进行的，不同的层次将负责通信中不同的部分。对于一个协议族/协议栈而言(protocol suite)，例如TCP/IP协议族，它是由多层次不同的协议协同组合而成的。一般而言，TCP/IP协议被划分为4个层次，如下图所示。
            不同层次决定了不同的功能。
            链路路层(Link Layer)，盖层有时候也会被称为(data-link)数据链路层或网络接口层(network interface)，一般而言盖层处理包含了操作系统中的设备驱动以及计算机物理设备的网卡(network interface card)的事务。具体体现为在传输前将比特编码为数据包(packet)，然后将数据包解码回目的地的比特，比特作为计算机通信中最基本的信息单元，数据包是所有现代计算机网络信息传输的基本单位。该层的职能还包括逻辑链路控制、媒体访问的控制、硬件寻址、差错检测和处理以及物理曾定义的物理标准的个工作。其通过必要的差错控制与流量控制来传输数据包，从而达到提供可靠数据传输的目的。
            网络层(Network Layer)，盖曾也被称为互联网层(internet layer)，盖层负责路由功能，解决物理地址与逻辑地址的转换问题，以及在网络路径中依照给定的算法选择一条最合适的路径进行数据包的传输。
            传输层(Transport Layer)，盖层负责维持网络上端到端的通信，传输层响应来自上方应用层的服务请求，并向下层的网络曾发出服务请求，以此在两台主机之间建立对话（虚连接）。该层主又两个协议组成，一个是面向连接的TCP协议，另外一个是无连接得UDP协议。区别在于TCP发送的每个数据包都要求接收方提供确认反馈，而UDP则不需要任何确认反馈信息。
            应用层(Application Layer)，盖层提供给人或软件使用网络资源，它提供了网络用户接口和支撑服务例如收发电子邮件的POP3与SMTP，远程主机登录的Telnet、SSH、Rlogin，文件下载的FTP，网页浏览的HTTP等。
          1.2 数据包封装与解封
            数据包从一台主机发送到另一台主机这个过程中，对于发送方而言，需要对数据包进行封装(encapsulation)，而对于接收方而言需要对数据包解封(demultiplexing)。在这个过程中，数据处于不同的层次有不同的名称作为区分，具体如下图所示。
            在数据包发送过程中，数据由应用层中相关应用产生，应用层将数据递交给传输层，传输层依据相关的指示使用TCP或UDP对数据进行封装，封装完成后传输给网络层，网络层则继续进行IP头部的封装，封装完成后，将数据包传递给数据链路层，数据链路层则进行以太网头和尾部校验的封装，之后将数据包通过传输介质发送出去。
            在数据包接收过程中链路层将接受到整个数据包被称为帧(Frame)，当数据链路层玻璃了以太网头部和尾部后数据包被送到网络层，此时我们将得到包(Packet)，当网络层将IP头部剥离送达传输层后，我们将得到以UDP或TCP为头部得内容称为报文(datagram)，当传输层将其头部剥离传输给应用层后，我们将得到正真的数据(data)。
            封装与解封是一组互逆的过程，可形象地将其比喻为邮政包裹的包装和派送这两个动作。
          1.3 主机间通信过程
            pass
           
    2. 地址与端口
          2.1 MAC地址
          2.2 IP地址
          2.3 IPv6 地址
          2.4 端口
开发涉及知识
    1. 嗅探技术
    2. 毒害ARP技术
开发工具介绍
    1. 开发选用系统
    2. Python3 语言
    3. 图像用户接口（GUI）
    4. 统计图生成工具
    5. 数据包过滤器接口
