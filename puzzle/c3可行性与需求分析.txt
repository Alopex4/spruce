 系统可行性研究
    1.1 技术可行性
        目前而言，嗅探工具种类繁多，著名的嗅探软件如tcpdump和wireshark，使用者的占比都相当高。以下逐一分析它们的优缺点，tcpdump是一款命令行软件，它有一格先天优势在于一般情况是是linux类操作系统下自带的嗅探软件，你只要安装了linux系统，打开命令行即可使用tcpdump。但是由于是命令行的软件，这同时也赐予了它先天的不足，学习门槛较高，对于大部分新手而言绝对不友好，挫败感十分强烈，现有的直接学习资料是manual文档，参数及其多，真正上手时间需要至少数十天。另一款软件是wireshark，wireshark提供图形界面，对新手较为友好，可以通过图形界面选择需要嗅探的网卡，数据包的分析也十分友善，符合操作者的习惯。但其功能过与单一，对于网络的排查人员而言，经常需要接触到ip地址查询的问题，使用wireshark就必须在两个软件之间进行切换，导致连惯性不足。从两款产品的比较而言，要想从中突破，就必须要开发出一款既亮丽的图形界面，又配备了向网络工具箱这样的软件。只有真正优秀的产品，才能捕获使用者的芳心。
    1.2 经济可行性
        目前而言，计算机网络的学习对于绝大多数计算机学科的同学都是必须的学科，而该款软件能够很好的解决，教授教导网络知识时遇到的痛点和难点，因此定位于教学辅助软件来说，其收益是不错的。因为借用了python3这股东风，快速开发对于开发人员要求有所降低，硬件而软件设备的投入也并不会太多。所以就经济上来说，开发该款嗅探器还是具有一定市场的。
    1.3 社会可行性
        嗅探作为学习网络的实践内容，其对于学习者的益处是显而易见的。然而我们也比必须要知道，许多网络的cracker们图谋不轨地使用这嗅探器以获取别人的帐号密码来盗用钱财。嗅探技术生来就是一把刀，这把刀应该怎么用，这是人的问题，技术本无对错之分。本应用软件的使用，应在合法的条件下进行，不得已损人利己的方式为自己谋取利益。

系统需求分析
    2.1 需求获取
            需求资料
            目前收到的需求资料如下：
            希望能够开发以下系统，捕获网络中传输和发送的数据，分析这些数据提取有用信息，记录下网络流入流出的数据流量。对于数据的抓取之前，能够有一个类似于筛选的机制只筛选出需要的数据包，重要的是能够对不同应用的数据也进行过滤，这样可以很方便地对数据进行分析。既然有了网络数据捕获的功能，系统捕获的网络数据不仅是个人主机的，它还应该具备扩展到局域网来捕捉数据，系统主要考虑的因素是实用性，这意味着必须要能解决特定环境下的网络问题。
            需求记录(需求编号，需求类型，需求来源，需求原语，需求内容)
            对于上述的需求治疗，必须要进行细致化的整理，理清客户的需求，并进行相应的记录。为了表述更为明确，这里将使用表格进行需求的记录，需求编号的设计上，格式上使用三位数字不满足三位的数字从左侧补零，数值上从一开始相邻序号依次递增一，作用目的仅用于唯一标识需求。需求类型，按照需求的性质划分，可分为显性需求与阴性需求，显性需求为客户通过材料得出的信息，隐形需求为通过内容分析得出的信息。需求来源，提出该需求的主体。需求原语，若需求来源为资料，标明出自资料的句子。需求内容，明确需求希望完成的任务是什么。

            以下为需求记录表:
            需求编号 001
            需求类型 显性
            需求来源 需求材料
            需求原语 捕获网络中传输和发送的数据
            需求内容 系统需要对网络数据进行嗅探
            
            需求编号 002
            需求类型 显性
            需求来源 需求材料
            需求原语 分析这些(网路中的数据)数据提取有用信息
            需求内容 系统需要对嗅探获取的数据包进行解析处理

            需求编号 003
            需求类型 显性
            需求来源 需求材料
            需求原语 捕记录下网络流入流出的数据流量
            需求内容 系统需要对网络流量进行统计
            
            需求编号 004
            需求类型 显性
            需求来源 需求材料
            需求原语 捕对于数据的抓取之前，能够有一个筛选的机制只筛选出需要的数据包
            需求内容 系统需要对网络数据包具备过滤能力
            
            需求编号 005
            需求类型 显性
            需求来源 需求材料
            需求原语 系统捕获的网络数据不仅是个人主机的，它还应该具备扩展到局域网来捕捉数据
            需求内容 系统需要具备对数据包捕获处理的能力
            
            需求编号 006
            需求类型 显性
            需求来源 需求材料
            需求原语 这意味着必须要能解决特定环境下的网络问题
            需求内容 系统需要具备解决实际网络问题的用途
            
            需求编号 007
            需求类型 隐形
            需求来源 资料分析
            需求原语 -
            需求内容 系统需要对本机信息和局域网信息进行区分
            
            需求编号 008
            需求类型 隐性
            需求来源 资料分析
            需求原语 -
            需求内容 系统需要过滤器对应用层协议进行过滤

            需求编号 009
            需求类型 隐性
            需求来源 思考联想
            需求原语 -
            需求内容 系统需要对抓取的信息进行保存
            
            需求编号 010
            需求类型 隐形
            需求来源 思考联想
            需求原语 -
            需求内容 系统需要对保存的信息进行读取
    
            需求编号 011
            需求类型 隐形
            需求来源 思考联想
            需求原语 -
            需求内容 系统需要网络抓包的一些辅助功能
    
    
    2.2 分析需求
            需求透视
            需求排序
                基本型需求
                期待型需求
                兴奋型需求
    2.3 系统工作流程图

开发工具介绍
    开发工具介绍
    3.1. 操作系统选用
        本应用开发选择使用的操作系统为Linux，具体发行版为Ubuntu 16.04 xenial。
        选择Linux操作系统的作为开发平台，主要有以下几个因素，完全开源且免费、稳定而安全、资源消耗低、可订制性高。
        Linux是完全开源的操作系统内核(Kernel)，它是一众计算机爱好者以及计算机极客(geek)通力协助完成的智力成果。一般而言，对于优秀操作系统内核的开发需要一支数十人上百人不等的团队，和数以百万甚至上千万的资金投入加持下，才有机会出成果，因此内核是一家操作系统公司关键的命脉。因此如IBM公司AIX操作系统的Monolithic内核，Apple公司macOS操作系统的Darwin内核以及Miscrosoft公司Windows操作系统的NT内核，均是这些公司的核心资料。既然是花了重金开发出来的成品，消费者要想使用它们，就必须给予这些公司相应的费用，否则将是侵权行为，情节严重的将会收到起诉律师函。因此拥有大量计算机设备的信息中心，由于授权费用高昂以及侵权可能带来的严重问题，Linux成为了服务器行业的首选，成为了网络从业人员使用频率最高的系统。
        Linux虽然是一个免费的操作系统，但其稳定性和安全性却是业内有着良好的口碑。据一份windows和linux安全系统分析指出[^1]，由于开源代码由世界各地的计算机爱好者维护，Linux的漏洞与设计失误较少；对于木马而言，linux依然会被木马攻击，但由于linux强大的文件系统，使得没有授权的用户组和用户文件在运行时受到了极大的阻碍，保护了系统安全；对于病毒而言，linux系统中的病毒并没有windows那么繁多。综合得出的结论是，linux对比其他的操作系统有着强而有里的安全护盾。
        系统的资源分配，是操作系统需要解决的头等大事。操作系统主要工作是负责资源的分配，但同时由于操作系统也是一个软件，它也必须常驻操作系统，因此分配资源之前，操作系统就必定会先消耗掉一部分的资源。同样与Windows作为比较，Windows的启动必须要带动图形界面的启动，然而对于操作系统而言，图形界面与内核的工作本里就是互不干涉的。内核的运行可以无视图形界面，只需要简单的命令行界面作为控制即可。windows却是无法实现这种图形界面与内核启动分离的，而linux完全没问题。可见在资源占用上linux十分的优秀。
        可定制行对于一位开发人员十分重要。一个系统的可定制行高，可以体现在对于开发工具安装卸载的简易性，体现在系统代码是否可修改这些方面。而这在linux系统上都有着出色的体现，linux对于安装与卸载软件都是通过库(repository)来统一处理的，用户只需要使用对应库的管理工具，一条指令下去，便可准确实现相关软件的查询，下载与安装。由于没有任何的霸王条款，linux的内核可以所以改动，重新打包发布，使得linux社区linux系统的发行版(distribution)在顶峰时期高达323个，如今维护的依然有285个。
    3.2 开发语言选用
        本应用使用的开发语言为Python3，具体版本为3.5.2。
        选择python3作为开发语言有以下几个原因，语法简单上手迅速，可读性强，运维人员常用技能。
        python做为一门高级语言，它是一款语法十分简单的语言。即使对于计算机基础并不扎实的人员，python上手的难度也不会太难。同时python作为一款解释性(interpreter)语言，只需要一个解释器便可以进行代码的书写十分方便，在解释器的交互界面上编写的代码只需要一个回车键就能得到立即的反馈，这十分符合学习的逻辑。对于符合自己测试目的的代码，程序员能够立即将代码进行转移，这是正反馈，得到错误提示或者不符合测试目的的代码，程序员能够立即进行调试，极大减轻了开发者的负担，平缓了学习曲线。
        作为高级语言，与底层语言最大的不同点，或者说对于人和机器识别起来最大的区别就是可读性。人类可以十分容易地通过对自己已知事物去类比未知的事物。python语言在设计上面，努力贴近英语，务求在变成过程，就如同用英语和计算机交流一样轻松。这对于从小学习外语的中国人来说无疑是一件好事。对于开发人员而言，代码能够运行是较低的层次，代码可以阅读才有提升的可能性。许多代码编写出来不仅是给计算机去阅读去执行的，对大部分编程者而言大多数时候都需要阅读代码，设置是别人的代码，如果这些代码的逻辑不是足够的清晰易懂，对于这个应用而言，即使设计得如何巧妙绝伦，对于这个应用的维护行和扩展性已经传播都是没有任何好处的。
        python的学习的火热，也使得python成为了仅次于shell的运维基本工具。对于嗅探器的使用者而言，他一般会是一名网络工程师，其次他最有可能是一名运维工程师。运维工程师管理的内容触及硬件资源，软件资源，网络资源，监控等多个模块。python对于运维人员是友好的，因此python成为了运维的基本入职技能，这和我们软件设计的面向群体不谋而合。
    3.3 图像用户接口（GUI）
        本应用选择的图形接口(Graphical User Interface)是python的PyQt5库，具体版本是5.12.1。
        GUI的选择是多种多样的，选择PyQt5有以下几个原因，跨平台，快速开发模式，良好到信号处理机制。
        GUI界面遇到的一大问题就是平台的问题，由于不同的操作系统GUI是不同到，不少应用软件既希望在A平台开发又希望在B平台运行，这就需要GUI图形库帮他们处理好这个问题，否这图形的移植将会成为一个不小的阻碍。PyQt在这方面十分的出色，对于不同平台下的GUI，它都能出色的处理。这给有志于对软件进行移植的开发者们，给与了足够的弹性。
        对于大多数开发者而言，图形界面的设计是他们最头痛的问题，这个图形开发需要遵循得规则，模块的排版问题，人体工程学等诸多的要求都是非美术专业同学的痛点。对于这些内容，pyqt给出的解决方式是，提供了一个可视化的软件布局接口(Qt Designer)。通过这款软件，开发人员可以通过对所需控件进行拖拉等操作得到自己想要的图形界面，而对于图形界面微小调整精细打磨的事情则交给后续代码去处理。这种分离式的操作，使得开发人员能够有效的把注意了放在软件的数据上面，从而提高开发的效率。
        图形软件，一个无法回避的问题就是控件之间的通信。这就好象人需要通信一样，控件之间也需要通信来进行协作。对于一些操作触发后，我们会希望这个控件应该做什么，那个控件应该干什么。彼此之间有沟通，才能干打事情。在pyqt上，沟通的实现使用了signal/slot的机制，控件触发某个动作后，反馈一个single出来，需要对这个signal进行处理得函数被称为slot，slot和single没有必然的联系，slot就如同普通的函数一样，没有不同的标识代码，唯独是你可以在single发送后需要指定slot去处理，来表明single和slot至今的关系。这种分离式的思想，给开发带来了轻松和便捷是其他GUI库很难媲美的。

小结


[1]梁世一.基于windows和linux操作系统安全漏洞分析[J].中国新通信,2018,20(23):145-147.
