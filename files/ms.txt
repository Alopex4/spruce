立论依据:
    毋庸置疑互联网是21世纪实际最伟大的发明，只需通过一台联网的设备，随手点开一个网络应用，我们便能足不出户尽享了解世界各地的实时资讯的便捷，网购实用的海内外商品，联系异国他乡的亲朋好友。今年是2019年，万维网(World Wide Web)迈入30周年，这是网络时代新的里程碑时刻。今天多姿多彩的互联网资讯使我们眼花缭乱，但有多少人知道这些“美轮美奂”的网络应用背后，其基础支撑其实是一个个一点都不起眼却矜矜业业的网络数据包。
    计算机网络，是一门交叉性将强的学科，其涵盖了信息通信工程和电子计算机的相关知识，这使得在该学科在学习过程中，门槛有所提升。计算机网络的专业名词较为晦涩，抽象能力较强，集中表现在各网络层次的职能划分，网络地址的规划使用，网络数据包的收发过程，网络协议头部字段的的理解等方面，单纯只从阅读文本对计算机网络进行学习，无疑于“管中窥豹只见一斑”。对于一名及格的网络从业者而言，上面的知识都是必须悉数掌握的知识，除了对文本资料的消化，另外必需辅以有益的的“可视化”辅助，从而构建出自己的知识体系。
    该课题研究的目的，在于对现有网络学习扫清部分障碍，使得网络的认识变得可视化，让网络学习者能够在一个较为舒适的环境下实现对网路知识的学习与认识建立起自己对网络的知识体系结构。通过该系统知道到书本上网络协议离我们并非是遥不可及的，恰恰相反它们是触手可及的，每个协议得头部字段都是如此真实的存在，它们为我们维系着我们的通信就如同守护神一样保证你我通信的自由和安全。
    该课题的理论意义在于拓宽了以太网监测网络的范畴，从个人网卡检测拓宽到局域网节点监测的思路与方向。
    该课题立足实践，其实际应用价值在于让网络学习者初学者，通过一个“可视化”的方式去了解网络上数据包收发状况，剖析网络数据包中包含的信息，加深对网络协议的认识，对协议的头部字段深刻理解，理解数据哪些报文部是加密的，哪些数据的报文是公开的。通过对网络数据包接收的检测，对局域网（Local Area Network）内其他主机的发现与监视，从而个加深对局域网概念的认识。对于网络工程师，可通过该系统实现对网络数据包的采样分析，进行网路问题的排除，导出局域网内主机的情况，进行网络IP地址的查询与定位以及专业词语的速查。
     
文献综述:
    网络流量的监听，是网络人员在网络排错中经常会使用到的东西。广义上来说，我们一般称网络监听工具为协议分析仪，这是因为网络监听的对象是网路数据包，而网络数据包是由一层一层网络协议包裹而成的，另外由于网络监听不只有纯软件，硬件也能实现，基于软硬件的网络数据捕抓和分析的系统因此就被称为协议分析仪器。而基于纯软件的网络监听工具，我们有另外一个比较耳熟能详的名字，称为嗅探器。嗅探技术是实现网络监听的关键所在，无论是协议分析仪还是嗅探器其离不开的都是对数据包的获取于分析。
     当前市面上著名的协议分析仪器有以下几款：
    1.深度数据包检测工具(Deep Packet Inspection and Analysis)：
    深度包检测（DPI）是一种检查和管理网络流量的高级方法。 它是一种包过滤形式，用于定位，识别，分类，重新路由或阻止具有特定数据或代码有效载荷的分组，而传统的分组过滤仅检查分组头，无法检测到。通常作为防火墙功能执行，在开放系统互连（OSI）参考模型的应用层进行深度包检测功能。
    2.PRTG网络监视器(PRTG Network Monitor):
    PRTG网络监视器（Paessler Router Traffic Grapher直到版本7）是Paessler AG的无代理网络监视软件。它可以监视和分类系统条件，如带宽使用或正常运行时间，并从其他主机收集统计信息，如交换机，路由器，服务器和其他设备和应用程序。
    3.tcpdump/WinDump:
    tcpdump是一个在命令行下运行的通用数据包分析器。 它允许用户显示通过计算机所连接的网络传输或接收的TCP / IP和其他数据包。 根据BSD许可证分发，tcpdump是免费软件。Tcpdump适用于大多数类Unix操作系统：Linux，Solaris，FreeBSD，DragonFly BSD，NetBSD，OpenBSD，OpenWrt，macOS，HP-UX 11i和AIX。 在这些系统中，tcpdump使用libpcap库来捕获数据包。用于Windows的tcpdump端口称为WinDump; 它使用WinPcap，libpcap的Windows端口。
    4.Wireshark/TShark:
    Wireshark是跨平台的，使用当前版本中的Qt小部件工具包来实现其用户界面，并使用pcap捕获数据包; 它运行在Linux，macOS，BSD，Solaris，其他一些类Unix操作系统和Microsoft Windows上。 还有一个名为TShark的基于终端的（非GUI）版本。 Wireshark以及与其一起分发的其他程序（如TShark）是免费软件，根据GNU通用公共许可证条款发布。
    随着国外嗅探技术得发展，我国对于网络嗅探也作出了研究，如在2002年实现了对底层协议伪装和IP装发结合得嗅探器器结构系统，研究并讨论了可行的插入攻击的几个底层协议。近年来也陆续涌现出不少商业版本的嗅探软件如科来网络分析系统，卓豪(ZOHO)公司的OpManager等。
   
研究内容:
主要研究内容有一下几点：
第一：实现对流经网卡的数据进行截获分析
第二：对于数据包头部信息进行相应的分析，统计
第三：对于局域网信息的获取，对局域网主机的抓包
第四：图像界面下多线程的协调
    系统整体的构思，一共分为以六个模块，第一个模块为网络基本信息模块，用于获得本地网络的基本信息为后续做好数据铺垫准备，第二个模块为局域网扫描模块，该模块的职能为扫描给定范围的局域网主机，并且获得这些主机的相关信息，为后续局域网扫描奠定基础，第三个模块是数据包过滤器模块，这是为了后续数据包捕获做准备得，第四个模块是抓包模块，通过过滤器模块获得过滤器语句结合抓包模块，对感兴趣的数据流进行抓包处理，第五个模块是数据包分析模块，既然有了数据包我们就需要对数据包进行可视化展示，数据包的基本信息我们使用摘录的方式显示，对于数据包的详细信息我们将通过点击进行头部字段的解码，第六个模块是辅助工具模块，这个模块包含了一些抓包的辅助功能，如对IP地址信息的查询，对网络专业词汇的查询等工作。
    出现的工作难点按六大模块划分，第一个模块较为简单，难度主要在如何通过更少的代价获取网络信息。第二个模块局域网的扫描如何才能活得其他局域网主机的信息是一个不小的难题，这里我们需要使用ARP数据包请求的方法来实现，并且ARP数据包的伪造是双向的，既要对发往目的主机的数据包进行引流，也要将网关收到的数据包进行截获。第三个模块对于过滤器的设置，由于过滤条件总多，如何设计一个可以吻合多个场景的过滤器显得并不容易，这个可以通过参考国内外嗅探器工具的开发者的产品从而获得灵感。第四个模块对于数据包的获取方式，如何将过滤器和数据包获取进行关联也是一个不少的问题，这个可以参考对于socket设置方面的技术著作得到相关得启发。第五个模块对于多种协议得分析如何能有效显示以及在抓包的同时进行数据包的显示这中多线程的调度需要进一步设计去完善，这里需要对线程的知识进行比较深入的认识，多设计实验去模拟效果获得解决方案的思路。第六个模块对于每个辅助工具的设计如何才能围绕主要得抓包功能提供有效的辅助，这个解决方案需要对网络抓包整个流程进行深刻认识，了解抓包中我们需要什么，我们得到的抓包信息后，我们还会需要什么。

研究基础：
    本研究将基于Linux操作系统之下，如需对局域网主机进行抓包要求主机网卡必须设置为混杂模式，并且需要启动ip_forward功能，要求局域网的交换机/路由器工作模式应调整为共享模式。开发的语言选择的是如今炙手可热的python，这们语言语法简单，上手简单适合进行敏捷开发。图像库将采用PyQt5库进行，这是Qt库的python版本，使用Qt库进行的软件开发，该模块可以实现对不同操作系统环境下提供相应的图形界面，为日后软件的移植打下了基础。本人有丰富的Linux平台操作经验，无论是对命令行的使用还是图像操作界面的使用都了然于胸，同时在课余时间研读了《TCP/IP Illustrated》这样的经典作品，并且曾系统学习过路有交换的基础知识，通过相关的认证考试。

查阅文献资料目录清单：
[1]赵谦.基于Linux下的网络监听技术[J].贵州科学,2007(S1):339-343.
[2]鄢鹏. 以太局域网的监听检测原理与实现[A]. 四川省通信学会.四川省通信学会二零零四年学术年会论文集（二）[C].四川省通信学会:四川省通信学会,2004:5.
[3]张金凤. 互联网流量控制系统的设计与实现[D].天津大学,2016.
[4]余融. 基于WinPcap的MFC网络嗅探技术研究及实现[D].湖南大学,2012.
[5]卢华. 基于WinPcap的网络嗅探器的设计与实现[D].吉林大学,2014.
[6]庄春兴,彭奇志.基于Winpcap的网络嗅探程序设计[J].计算机与现代化,2002(05):11-13.
[7]王率.网络欺骗和嗅探技术研究[J].网络安全技术与应用,2013(09):88-89.
[8]黄孝楠,韩宇.用于局域网的网络嗅探器的设计[J].网络安全技术与应用,2014(08):95-96.
[9]孙晓玲,孙晓叶,沈焱萍.《网络协议分析》课程可视化教学方法研究[J].电脑迷,2018(06):152.

工作计划:
1. 完成开题报告                        2019.03.10 - 2019.03.22
2. 对系统的UI界面进行设计              2019.03.23 - 2019.04.01
3. 对系统的每个模块进行细分设计        2019.04.02 - 2019.04.05
4. 完成本地网络信息模块的开发          2019.04.06 - 2019.04.10
5. 完成局域网数据模块的开发            2019.04.11 - 2019.04.15
6. 完成过滤器,数据包捕获据模块的开发   2019.04.16 - 2019.04.19
7. 完成过数据包解包模块的开发          2019.04.20 - 2019.04.25
8. 完成过辅助工具模块的开发            2019.04.26 - 2019.04.28
9. 对系统进行相关测试                  2019.04.30 - 2019.05.02
10. 毕业论文的撰写                     2019.05.02 - 2019.05.06
